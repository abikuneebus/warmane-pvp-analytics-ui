/** General Styles **/

.main-container {
  font-family: var(--content-font), Arial, Helvetica, sans-serif;
}

/* divides summary, 1v1, 3v3, 5v5, etc. with border */
.bracket-divider {
  border: var(--border);
  padding: 1rem;
  margin: 1rem 0;
}

.header {
  font-family: var(--title-font);
}

h2 {
  font-size: 1.6rem;
}

/* vertically centering cards within each row */
.row {
  display: flex;
  align-items: center;
}

.row:not(:last-child) {
  margin-bottom: 15px;
}

/** Cards **/

#losses-over-time-card {
  width: 100%;
  height: 40vh;
}

.card {
  margin: 1rem auto;
  display: flex;
  justify-content: center;
  background: var(--med-gray-bg);
  box-shadow: var(--box-shadow);
}

.card-body {
  font-family: var(--content-font);
  font-weight: 500;
  border: var(--border);
  border-radius: var(--border-radius-square);
  background: var(--light-gray-bg);
}

.card-title {
  font-style: italic;
}

.card-header {
  font-style: italic;
  align-items: center;
  display: flex;
  flex-direction: row;
}

/* (React-Bootstrap Card type) */
.list-group-item {
  text-align: left;
  width: 100%;
  display: flex;
  background-color: var(--canvas) !important;
}

/* main stat values in summary section (total games, total losses, win rate, nemesis) */
.card-stat-value {
  font-style: normal;
  margin: auto;
  color: var(--red);
}

/* overlaid image captions (dog picture) */
.img-overlay--text {
  font-style: unset;
  font-weight: bold;
  font-size: 1rem;
  font-family: var(--caption-font);
  background-color: rgba(0, 0, 0, 0.4);
  color: var(--light-gray);
  border-radius: var(--border-radius-square);
  padding: 0.3rem 0.5rem;
}

/** Navbar **/

.navbar {
  position: fixed;
  height: 4.5rem;
  top: 0;
  left: 0;
  right: 0;
  z-index: 99;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  background: var(--black-blue-bg);
  box-shadow: var(--box-shadow);
}

#nav-brand-text {
  font-family: var(--navbar-font);
  font-size: 1.5rem;
  color: var(--rich-yellow);
}

.container {
  height: 100%;
}

.found-dog-wrapper {
  height: calc(100% + 32px);
  width: 100%;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.img-fluid {
  filter: contrast(80%);
  max-height: 75%;
  width: auto;
  object-fit: contain;
}

.navbar-link {
  text-decoration: none;
}
.navbar-link:hover #nav-brand-text {
  font-size: 1.51rem;
  text-shadow: 0 0 1px var(--bright-yellow);
}

/** Search **/

/* search disabled (realm || character missing) */
#character-search-btn.disabled {
  cursor: not-allowed;
  pointer-events: all !important;
}

#character-search-btn.disabled .fa_magnifying-glass {
  filter: sepia(50%);
}

.radio-container input[type="radio"] {
  position: absolute;
  opacity: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  z-index: 1;
}

/* moving search button inside of the search-bar */
.searchbar {
  display: flex;
  background-color: var(--searchbar-white);
  border-radius: var(--border-radius-square);
  justify-content: space-between;
}

.searchbar-text {
  width: 93.5%;
  border: 0;
  padding-right: 1rem;
}

/* styling search button, including on hover and focus */
#character-search-btn {
  background-color: var(--searchbar-white);
  border: 0;
  width: 5.5%;
}

#character-search-btn .fa_magnifying-glass {
  color: var(--search-btn-blue);
}

#character-search-btn:hover .fa_magnifying-glass {
  transform: scale(105%);
}

#character-search-btn:focus .fa_magnifying-glass {
  animation: searching 1500ms linear 0s infinite normal;
}

/* search button pulse animation on-click & until load */
@keyframes searching {
  0% {
    color: var(--search-btn-green);
    transform: scale(105%);
  }
  25% {
    transform: scale(110%);
  }
  50% {
    transform: scale(105%);
  }
  75% {
    transform: scale(100%);
  }
  100% {
    color: var(--search-btn-green);
    transform: scale(105%);
  }
}

/** Realm Selection Buttons **/

/* turning default radio buttons into all-in-one buttons */
.radio-container {
  position: relative;
  display: inline-block;
}

.radio-container .custom-form-check {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

.radio-label {
  display: flex;
  justify-content: center;
  padding: 10px 20px;
  width: 15rem;
  margin: 5px;
  border-radius: var(--border-radius-square);
  box-shadow: var(--box-shadow-btn);
  border: var(--border);
  font-family: var(--button-font);
  font-size: 1.5rem;
  cursor: pointer;
  color: var(--muted-yellow);
  background: var(--dark-blue-btn-bg);
}

/* styling buttons on hover, when checked */
.radio-container .custom-form-check:hover + .radio-label {
  color: var(--bright-yellow);
  transform: scale(98%);
  text-shadow: 0px 0px 5px var(--bright-yellow);
}

.radio-container .custom-form-check:checked + .radio-label {
  color: var(--rich-yellow);
}

/* styling unselected button */
.anti-selected-realm {
  filter: blur(1px) saturate(50%);
}

/** Media Queries **/

/* tablets, phones, and smaller */
@media only screen and (max-device-height: 768px) and (max-device-width: 1024px) {
  /* aligning text to center */
  .main-container {
    text-align: center;
  }

  /* scrolling up: navbar sticks */
  .show-navbar {
    transform: translateY(0);
    transition: transform 0.3s ease-in-out;
  }

  /* scrolling down: navbar hides */
  .hide-navbar {
    position: fixed;
    transform: translateY(-100%);
    transition: transform 0.3s ease-in-out;
  }

  /* stopping default browser 'focus' outlines from overlapping in searchbar */
  #character-search-btn {
    padding-right: 1rem;
  }
}

/*
React-Bootstrap Breakpoints:
  xs: <576px
  s: >=576px
  m: >=768px
  l: >=992px
  xl: >=1200px
  xxl: >=1400px
  */
